import{LitElement,html,css}from"https://unpkg.com/lit-element@2.0.1/lit-element.js?module";var types=[{type:"success",svg:"./svg/notif-icon-success.svg"},{type:"warning",svg:"./svg/notif-icon-warning.svg"},{type:"danger",svg:"./svg/notif-icon-danger.svg"},{type:"info",svg:"./svg/notif-icon-info.svg"}],total_notifs=0;class BeerNotificationLit extends LitElement{static get properties(){return{type:{type:String,reflect:!0},title:{type:String,reflect:!0},message:{type:String,reflect:!0},duration:{type:Number,reflect:!0},position:{type:String,reflect:!0},offset:{type:Number,reflect:!0},closed:{type:Boolean},index:{type:Number},prevHeights:{type:Number}}}constructor(){super(),this.type="",this.title="",this.message="",this.duration=4500,this.position="",this.offset=0,this.hidden=!1,this.closed=!1,this.prevHeights=0;var t=document.getElementsByTagName("beer-notification-lit").item(total_notifs);this.index=total_notifs,total_notifs++,this.message=t.textContent}firstUpdated(){for(var t=0;t<this.index;t++){let e=document.getElementsByTagName("beer-notification-lit").item(t).shadowRoot.querySelector(".popup"),i=window.getComputedStyle(e,null).getPropertyValue("height"),o=parseFloat(i.replace(/px/gi,""));this.prevHeights+=o+10}}connectedCallback(){super.connectedCallback(),0!=this.duration&&window.setTimeout(()=>{this.closed=!0,this._recalculateOffset()},this.duration)}_getTypeIcon(){let t=types.find(t=>{return t.type===this.type});return void 0!==t?t.svg:""}_validType(){let t=!1;return types.find(e=>{e.type===this.type&&(t=!0)}),t}_removeFromDom(t){t.parentNode.removeChild(t)}_handleClose(t){this.closed=!0,this._recalculateOffset()}_recalculateOffset(){for(var t=total_notifs-1;t>this.index;t--){let e=document.getElementsByTagName("beer-notification-lit").item(t),i=document.getElementsByTagName("beer-notification-lit").item(this.index).shadowRoot.querySelector(".popup"),o=window.getComputedStyle(i,null).getPropertyValue("height"),n=parseFloat(o.replace(/px/gi,""));e.prevHeights-=n+10}}_getStyle(){var t="";return t+=this.closed?"display: none;":"display: block;",t+="position: fixed;",t+="top: "+this.prevHeights+"px;"}_getClass(){}render(){return html`
        <div class="popup shadow" style="${this._getStyle()}">
            <div class="popup-content">
                <span>
                    <img class=${this._validType()?"icon":""} 
                           src=${this._getTypeIcon()}>
                    </img>
                </span>
                <p class="popup-title">${this.title}</> 
                <span class="close" @click="${this._handleClose}">&times;</span>
                <p>${this.message}</>
            </div>
        </div>
    `}static get styles(){return css`
        :host {
            display: block;
            font-family: sans-serif;
            text-align: left;
        }
        /* Notification box */
        .popup {
            /*display: none;*/   /* Hidden by default. Use this when we have linked with button.
                                Once linked with button, notification will show up when button
                                is clicked. */
            /*position: fix;*/     /* Stay in place on screen */
            z-index: 1;          /* In front of everything else with smaller z-indices 
                                 /* (default z-index is 0 if unspecified) */
            right: 0;            /* By default, positioned on top-right of screen */
            top: 0;
            width: 20em;         /* Fixed width */
            height: auto;        /* Dynamically adjust height based on content */
            overflow: auto;      /* Enable scroll if needed */
            margin: 2em;
            border-radius: 0.5em;
            background-color: white;
            -webkit-animation-name: animateright;
            -webkit-animation-duration: 0.4s;
            animation-name: animateright;
            animation-duration: 0.4s;
        }
        /* Add Animation */
        @-webkit-keyframes animate-right {
        from {right:-300px; opacity:0} 
        to {right:0; opacity:1}
        }
        @keyframes animateright {
        from {right:-300px; opacity:0}
        to {right:0; opacity:1}
        }
        /* Shadow around notification box */
        .shadow {
            /* horizontal-length, vertical-length, blur-radius, shadow-with-opacity */
            -webkit-box-shadow:  0em 0em 0.8em rgba(0, 0, 0, 0.1);
            -moz-box-shadow:     0em 0em 0.8em rgba(0, 0, 0, 0.1);
            box-shadow:          0em 0em 0.8em rgba(0, 0, 0, 0.1);
        }
        /* Notification Content */
        .popup-title {
            font-weight: bold;
        }
        .popup-content {
            margin: auto;
            width: 90%;
        }
        /* The Close Button */
        .close {
            color: #a8a8a8;
            float: right;
            font-size: 28px;
            transition: 0.1s;
        }
      
        .close:hover, .close:focus {
            color: #636363;
            text-decoration: none;
            cursor: pointer;
        }
        .icon {
            width: 1.3em;
            height: 1.3em;
            float: left;
            padding: 0 0.7em 0 0;
        }
        `}}window.customElements.define("beer-notification-lit",BeerNotificationLit);