'use strict';

exports.__esModule = true;

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _osFamily = require('os-family');

var _osFamily2 = _interopRequireDefault(_osFamily);

var _base = require('../base');

var _base2 = _interopRequireDefault(_base);

var _runtimeInfo = require('./runtime-info');

var _runtimeInfo2 = _interopRequireDefault(_runtimeInfo);

var _config = require('./config');

var _config2 = _interopRequireDefault(_config);

var _localFirefox = require('./local-firefox');

var _marionetteClient = require('./marionette-client');

var _marionetteClient2 = _interopRequireDefault(_marionetteClient);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (0, _extends3.default)({}, _base2.default, {

    _getConfig(name) {
        return (0, _config2.default)(name);
    },

    _getBrowserProtocolClient(runtimeInfo) {
        return runtimeInfo.marionetteClient;
    },

    _createMarionetteClient(runtimeInfo) {
        return (0, _asyncToGenerator3.default)(function* () {
            try {
                const marionetteClient = new _marionetteClient2.default(runtimeInfo.marionettePort);

                yield marionetteClient.connect();

                return marionetteClient;
            } catch (e) {
                return null;
            }
        })();
    },

    openBrowser(browserId, pageUrl, configString) {
        var _this = this;

        return (0, _asyncToGenerator3.default)(function* () {
            const runtimeInfo = yield (0, _runtimeInfo2.default)(configString);

            runtimeInfo.browserName = _this._getBrowserName();
            runtimeInfo.browserId = browserId;

            yield (0, _localFirefox.start)(pageUrl, runtimeInfo);

            yield _this.waitForConnectionReady(runtimeInfo.browserId);

            if (runtimeInfo.marionettePort) runtimeInfo.marionetteClient = yield _this._createMarionetteClient(runtimeInfo);

            _this.openedBrowsers[browserId] = runtimeInfo;
        })();
    },

    closeBrowser(browserId) {
        var _this2 = this;

        return (0, _asyncToGenerator3.default)(function* () {
            const runtimeInfo = _this2.openedBrowsers[browserId];
            const config = runtimeInfo.config,
                  marionetteClient = runtimeInfo.marionetteClient;


            if (config.headless) yield marionetteClient.quit();else yield _this2.closeLocalBrowser(browserId);

            if (_osFamily2.default.mac && !config.headless) yield (0, _localFirefox.stop)(runtimeInfo);

            if (runtimeInfo.tempProfileDir) yield runtimeInfo.tempProfileDir.dispose();

            delete _this2.openedBrowsers[browserId];
        })();
    },

    resizeWindow(browserId, width, height) {
        var _this3 = this;

        return (0, _asyncToGenerator3.default)(function* () {
            const marionetteClient = _this3.openedBrowsers[browserId].marionetteClient;


            yield marionetteClient.setWindowSize(width, height);
        })();
    },

    getVideoFrameData(browserId) {
        var _this4 = this;

        return (0, _asyncToGenerator3.default)(function* () {
            const marionetteClient = _this4.openedBrowsers[browserId].marionetteClient;


            return yield marionetteClient.getScreenshotData();
        })();
    },

    hasCustomActionForBrowser(browserId) {
        var _this5 = this;

        return (0, _asyncToGenerator3.default)(function* () {
            var _openedBrowsers$brows = _this5.openedBrowsers[browserId];
            const config = _openedBrowsers$brows.config,
                  marionetteClient = _openedBrowsers$brows.marionetteClient;


            return {
                hasCloseBrowser: true,
                hasTakeScreenshot: !!marionetteClient,
                hasChromelessScreenshots: !!marionetteClient,
                hasGetVideoFrameData: !!marionetteClient,
                hasResizeWindow: !!marionetteClient && config.headless,
                hasMaximizeWindow: !!marionetteClient && config.headless,
                hasCanResizeWindowToDimensions: false
            };
        })();
    }
});
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9icm93c2VyL3Byb3ZpZGVyL2J1aWx0LWluL2RlZGljYXRlZC9maXJlZm94L2luZGV4LmpzIl0sIm5hbWVzIjpbImRlZGljYXRlZFByb3ZpZGVyQmFzZSIsIl9nZXRDb25maWciLCJuYW1lIiwiX2dldEJyb3dzZXJQcm90b2NvbENsaWVudCIsInJ1bnRpbWVJbmZvIiwibWFyaW9uZXR0ZUNsaWVudCIsIl9jcmVhdGVNYXJpb25ldHRlQ2xpZW50IiwiTWFyaW9uZXR0ZUNsaWVudCIsIm1hcmlvbmV0dGVQb3J0IiwiY29ubmVjdCIsImUiLCJvcGVuQnJvd3NlciIsImJyb3dzZXJJZCIsInBhZ2VVcmwiLCJjb25maWdTdHJpbmciLCJicm93c2VyTmFtZSIsIl9nZXRCcm93c2VyTmFtZSIsIndhaXRGb3JDb25uZWN0aW9uUmVhZHkiLCJvcGVuZWRCcm93c2VycyIsImNsb3NlQnJvd3NlciIsImNvbmZpZyIsImhlYWRsZXNzIiwicXVpdCIsImNsb3NlTG9jYWxCcm93c2VyIiwiT1MiLCJtYWMiLCJ0ZW1wUHJvZmlsZURpciIsImRpc3Bvc2UiLCJyZXNpemVXaW5kb3ciLCJ3aWR0aCIsImhlaWdodCIsInNldFdpbmRvd1NpemUiLCJnZXRWaWRlb0ZyYW1lRGF0YSIsImdldFNjcmVlbnNob3REYXRhIiwiaGFzQ3VzdG9tQWN0aW9uRm9yQnJvd3NlciIsImhhc0Nsb3NlQnJvd3NlciIsImhhc1Rha2VTY3JlZW5zaG90IiwiaGFzQ2hyb21lbGVzc1NjcmVlbnNob3RzIiwiaGFzR2V0VmlkZW9GcmFtZURhdGEiLCJoYXNSZXNpemVXaW5kb3ciLCJoYXNNYXhpbWl6ZVdpbmRvdyIsImhhc0NhblJlc2l6ZVdpbmRvd1RvRGltZW5zaW9ucyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7Ozs7OzZDQUlPQSxjOztBQUVIQyxlQUFZQyxJQUFaLEVBQWtCO0FB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Q0FBQy9CLGdCQUYvQjtBQUdIZ0MsMENBQWdDLENBQUMsQ0FBQ2hDLGdCQUgvQjtBQUlIaUMsc0NBQWdDLENBQUMsQ0FBQ2pDLGdCQUovQjtBQUtIa0MsaUNBQWdDLENBQUMsQ0FBQ2xDLGdCQUFGLElBQXNCZSxPQUFPQyxRQUwxRDtBQU1IbUIsbUNBQWdDLENBQUMsQ0FBQ25DLGdCQUFGLElBQXNCZSxPQUFPQyxRQU4xRDtBQU9Ib0IsZ0RBQWdDO0FBUDdCLGFBQVA7QUFId0M7QUFZM0MiLCJmaWxlIjoiYnJvd3Nlci9wcm92aWRlci9idWlsdC1pbi9kZWRpY2F0ZWQvZmlyZWZveC9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBPUyBmcm9tICdvcy1mYW1pbHknO1xuaW1wb3J0IGRlZGljYXRlZFByb3ZpZGVyQmFzZSBmcm9tICcuLi9iYXNlJztcbmltcG9ydCBnZXRSdW50aW1lSW5mbyBmcm9tICcuL3J1bnRpbWUtaW5mbyc7XG5pbXBvcnQgZ2V0Q29uZmlnIGZyb20gJy4vY29uZmlnJztcbmltcG9ydCB7IHN0YXJ0IGFzIHN0YXJ0TG9jYWxGaXJlZm94LCBzdG9wIGFzIHN0b3BMb2NhbEZpcmVmb3ggfSBmcm9tICcuL2xvY2FsLWZpcmVmb3gnO1xuaW1wb3J0IE1hcmlvbmV0dGVDbGllbnQgZnJvbSAnLi9tYXJpb25ldHRlLWNsaWVudCc7XG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIC4uLmRlZGljYXRlZFByb3ZpZGVyQmFzZSxcblxuICAgIF9nZXRDb25maWcgKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIGdldENvbmZpZyhuYW1lKTtcbiAgICB9LFxuXG4gICAgX2dldEJyb3dzZXJQcm90b2NvbENsaWVudCAocnVudGltZUluZm8pIHtcbiAgICAgICAgcmV0dXJuIHJ1bnRpbWVJbmZvLm1hcmlvbmV0dGVDbGllbnQ7XG4gICAgfSxcblxuICAgIGFzeW5jIF9jcmVhdGVNYXJpb25ldHRlQ2xpZW50IChydW50aW1lSW5mbykge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgbWFyaW9uZXR0ZUNsaWVudCA9IG5ldyBNYXJpb25ldHRlQ2xpZW50KHJ1bnRpbWVJbmZvLm1hcmlvbmV0dGVQb3J0KTtcblxuICAgICAgICAgICAgYXdhaXQgbWFyaW9uZXR0ZUNsaWVudC5jb25uZWN0KCk7XG5cbiAgICAgICAgICAgIHJldHVybiBtYXJpb25ldHRlQ2xpZW50O1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgIH0sXG5cbiAgICBhc3luYyBvcGVuQnJvd3NlciAoYnJvd3NlcklkLCBwYWdlVXJsLCBjb25maWdTdHJpbmcpIHtcbiAgICAgICAgY29uc3QgcnVudGltZUluZm8gPSBhd2FpdCBnZXRSdW50aW1lSW5mbyhjb25maWdTdHJpbmcpO1xuXG4gICAgICAgIHJ1bnRpbWVJbmZvLmJyb3dzZXJOYW1lID0gdGhpcy5fZ2V0QnJvd3Nlck5hbWUoKTtcbiAgICAgICAgcnVudGltZUluZm8uYnJvd3NlcklkICAgPSBicm93c2VySWQ7XG5cbiAgICAgICAgYXdhaXQgc3RhcnRMb2NhbEZpcmVmb3gocGFnZVVybCwgcnVudGltZUluZm8pO1xuXG4gICAgICAgIGF3YWl0IHRoaXMud2FpdEZvckNvbm5lY3Rpb25SZWFkeShydW50aW1lSW5mby5icm93c2VySWQpO1xuXG4gICAgICAgIGlmIChydW50aW1lSW5mby5tYXJpb25ldHRlUG9ydClcbiAgICAgICAgICAgIHJ1bnRpbWVJbmZvLm1hcmlvbmV0dGVDbGllbnQgPSBhd2FpdCB0aGlzLl9jcmVhdGVNYXJpb25ldHRlQ2xpZW50KHJ1bnRpbWVJbmZvKTtcblxuICAgICAgICB0aGlzLm9wZW5lZEJyb3dzZXJzW2Jyb3dzZXJJZF0gPSBydW50aW1lSW5mbztcbiAgICB9LFxuXG4gICAgYXN5bmMgY2xvc2VCcm93c2VyIChicm93c2VySWQpIHtcbiAgICAgICAgY29uc3QgcnVudGltZUluZm8gPSB0aGlzLm9wZW5lZEJyb3dzZXJzW2Jyb3dzZXJJZF07XG4gICAgICAgIGNvbnN0IHsgY29uZmlnLCBtYXJpb25ldHRlQ2xpZW50IH0gPSBydW50aW1lSW5mbztcblxuICAgICAgICBpZiAoY29uZmlnLmhlYWRsZXNzKVxuICAgICAgICAgICAgYXdhaXQgbWFyaW9uZXR0ZUNsaWVudC5xdWl0KCk7XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIGF3YWl0IHRoaXMuY2xvc2VMb2NhbEJyb3dzZXIoYnJvd3NlcklkKTtcblxuICAgICAgICBpZiAoT1MubWFjICYmICFjb25maWcuaGVhZGxlc3MpXG4gICAgICAgICAgICBhd2FpdCBzdG9wTG9jYWxGaXJlZm94KHJ1bnRpbWVJbmZvKTtcblxuICAgICAgICBpZiAocnVudGltZUluZm8udGVtcFByb2ZpbGVEaXIpXG4gICAgICAgICAgICBhd2FpdCBydW50aW1lSW5mby50ZW1wUHJvZmlsZURpci5kaXNwb3NlKCk7XG5cbiAgICAgICAgZGVsZXRlIHRoaXMub3BlbmVkQnJvd3NlcnNbYnJvd3NlcklkXTtcbiAgICB9LFxuXG4gICAgYXN5bmMgcmVzaXplV2luZG93IChicm93c2VySWQsIHdpZHRoLCBoZWlnaHQpIHtcbiAgICAgICAgY29uc3QgeyBtYXJpb25ldHRlQ2xpZW50IH0gPSB0aGlzLm9wZW5lZEJyb3dzZXJzW2Jyb3dzZXJJZF07XG5cbiAgICAgICAgYXdhaXQgbWFyaW9uZXR0ZUNsaWVudC5zZXRXaW5kb3dTaXplKHdpZHRoLCBoZWlnaHQpO1xuICAgIH0sXG5cbiAgICBhc3luYyBnZXRWaWRlb0ZyYW1lRGF0YSAoYnJvd3NlcklkKSB7XG4gICAgICAgIGNvbnN0IHsgbWFyaW9uZXR0ZUNsaWVudCB9ID0gdGhpcy5vcGVuZWRCcm93c2Vyc1ticm93c2VySWRdO1xuXG4gICAgICAgIHJldHVybiBhd2FpdCBtYXJpb25ldHRlQ2xpZW50LmdldFNjcmVlbnNob3REYXRhKCk7XG4gICAgfSxcblxuICAgIGFzeW5jIGhhc0N1c3RvbUFjdGlvbkZvckJyb3dzZXIgKGJyb3dzZXJJZCkge1xuICAgICAgICBjb25zdCB7IGNvbmZpZywgbWFyaW9uZXR0ZUNsaWVudCB9ID0gdGhpcy5vcGVuZWRCcm93c2Vyc1ticm93c2VySWRdO1xuXG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBoYXNDbG9zZUJyb3dzZXI6ICAgICAgICAgICAgICAgIHRydWUsXG4gICAgICAgICAgICBoYXNUYWtlU2NyZWVuc2hvdDogICAgICAgICAgICAgICEhbWFyaW9uZXR0ZUNsaWVudCxcbiAgICAgICAgICAgIGhhc0Nocm9tZWxlc3NTY3JlZW5zaG90czogICAgICAgISFtYXJpb25ldHRlQ2xpZW50LFxuICAgICAgICAgICAgaGFzR2V0VmlkZW9GcmFtZURhdGE6ICAgICAgICAgICAhIW1hcmlvbmV0dGVDbGllbnQsXG4gICAgICAgICAgICBoYXNSZXNpemVXaW5kb3c6ICAgICAgICAgICAgICAgICEhbWFyaW9uZXR0ZUNsaWVudCAmJiBjb25maWcuaGVhZGxlc3MsXG4gICAgICAgICAgICBoYXNNYXhpbWl6ZVdpbmRvdzogICAgICAgICAgICAgICEhbWFyaW9uZXR0ZUNsaWVudCAmJiBjb25maWcuaGVhZGxlc3MsXG4gICAgICAgICAgICBoYXNDYW5SZXNpemVXaW5kb3dUb0RpbWVuc2lvbnM6IGZhbHNlXG4gICAgICAgIH07XG4gICAgfVxufTtcbiJdfQ==
