"use strict";
// -------------------------------------------------------------
// WARNING: this file is used by both the client and the server.
// Do not use any browser or node-specific API!
// -------------------------------------------------------------
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = {
    click: 'click',
    rightClick: 'right-click',
    doubleClick: 'double-click',
    drag: 'drag',
    dragToElement: 'drag-to-element',
    hover: 'hover',
    typeText: 'type-text',
    selectText: 'select-text',
    selectTextAreaContent: 'select-text-area-content',
    selectEditableContent: 'select-editable-content',
    pressKey: 'press-key',
    wait: 'wait',
    navigateTo: 'navigate-to',
    setFilesToUpload: 'set-files-to-upload',
    clearUpload: 'clear-upload',
    executeClientFunction: 'execute-client-function',
    executeSelector: 'execute-selector',
    takeScreenshot: 'take-screenshot',
    takeElementScreenshot: 'take-element-screenshot',
    takeScreenshotOnFail: 'take-screenshot-on-fail',
    prepareBrowserManipulation: 'prepare-browser-manipulation',
    showAssertionRetriesStatus: 'show-assertion-retries-status',
    hideAssertionRetriesStatus: 'hide-assertion-retries-status',
    setBreakpoint: 'set-breakpoint',
    resizeWindow: 'resize-window',
    resizeWindowToFitDevice: 'resize-window-to-fit-device',
    maximizeWindow: 'maximize-window',
    switchToIframe: 'switch-to-iframe',
    switchToMainWindow: 'switch-to-main-window',
    setNativeDialogHandler: 'set-native-dialog-handler',
    getNativeDialogHistory: 'get-native-dialog-history',
    getBrowserConsoleMessages: 'get-browser-console-messages',
    setTestSpeed: 'set-test-speed',
    setPageLoadTimeout: 'set-page-load-timeout',
    debug: 'debug',
    assertion: 'assertion',
    useRole: 'useRole',
    testDone: 'test-done',
    backupStorages: 'backup-storages',
    executeExpression: 'execute-expression',
    unlockPage: 'unlock-page'
};
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90ZXN0LXJ1bi9jb21tYW5kcy90eXBlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxnRUFBZ0U7QUFDaEUsZ0VBQWdFO0FBQ2hFLCtDQUErQztBQUMvQyxnRUFBZ0U7O0FBRWhFLGtCQUFlO0lBQ1gsS0FBSyxFQUF1QixPQUFPO0lBQ25DLFVBQVUsRUFBa0IsYUFBYTtJQUN6QyxXQUFXLEVBQWlCLGNBQWM7SUFDMUMsSUFBSSxFQUF3QixNQUFNO0lBQ2xDLGFBQWEsRUFBZSxpQkFBaUI7SUFDN0MsS0FBSyxFQUF1QixPQUFPO0lBQ25DLFFBQVEsRUFBb0IsV0FBVztJQUN2QyxVQUFVLEVBQWtCLGFBQWE7SUFDekMscUJBQXFCLEVBQU8sMEJBQTBCO0lBQ3RELHFCQUFxQixFQUFPLHlCQUF5QjtJQUNyRCxRQUFRLEVBQW9CLFdBQVc7SUFDdkMsSUFBSSxFQUF3QixNQUFNO0lBQ2xDLFVBQVUsRUFBa0IsYUFBYTtJQUN6QyxnQkFBZ0IsRUFBWSxxQkFBcUI7SUFDakQsV0FBVyxFQUFpQixjQUFjO0lBQzFDLHFCQUFxQixFQUFPLHlCQUF5QjtJQUNyRCxlQUFlLEVBQWEsa0JBQWtCO0lBQzlDLGNBQWMsRUFBYyxpQkFBaUI7SUFDN0MscUJBQXFCLEVBQU8seUJBQXlCO0lBQ3JELG9CQUFvQixFQUFRLHlCQUF5QjtJQUNyRCwwQkFBMEIsRUFBRSw4QkFBOEI7SUFDMUQsMEJBQTBCLEVBQUUsK0JBQStCO0lBQzNELDBCQUEwQixFQUFFLCtCQUErQjtJQUMzRCxhQUFhLEVBQWUsZ0JBQWdCO0lBQzVDLFlBQVksRUFBZ0IsZUFBZTtJQUMzQyx1QkFBdUIsRUFBSyw2QkFBNkI7SUFDekQsY0FBYyxFQUFjLGlCQUFpQjtJQUM3QyxjQUFjLEVBQWMsa0JBQWtCO0lBQzlDLGtCQUFrQixFQUFVLHVCQUF1QjtJQUNuRCxzQkFBc0IsRUFBTSwyQkFBMkI7SUFDdkQsc0JBQXNCLEVBQU0sMkJBQTJCO0lBQ3ZELHlCQUF5QixFQUFHLDhCQUE4QjtJQUMxRCxZQUFZLEVBQWdCLGdCQUFnQjtJQUM1QyxrQkFBa0IsRUFBVSx1QkFBdUI7SUFDbkQsS0FBSyxFQUF1QixPQUFPO0lBQ25DLFNBQVMsRUFBbUIsV0FBVztJQUN2QyxPQUFPLEVBQXFCLFNBQVM7SUFDckMsUUFBUSxFQUFvQixXQUFXO0lBQ3ZDLGNBQWMsRUFBYyxpQkFBaUI7SUFDN0MsaUJBQWlCLEVBQVcsb0JBQW9CO0lBQ2hELFVBQVUsRUFBa0IsYUFBYTtDQUM1QyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gV0FSTklORzogdGhpcyBmaWxlIGlzIHVzZWQgYnkgYm90aCB0aGUgY2xpZW50IGFuZCB0aGUgc2VydmVyLlxuLy8gRG8gbm90IHVzZSBhbnkgYnJvd3NlciBvciBub2RlLXNwZWNpZmljIEFQSSFcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIGNsaWNrOiAgICAgICAgICAgICAgICAgICAgICAnY2xpY2snLFxuICAgIHJpZ2h0Q2xpY2s6ICAgICAgICAgICAgICAgICAncmlnaHQtY2xpY2snLFxuICAgIGRvdWJsZUNsaWNrOiAgICAgICAgICAgICAgICAnZG91YmxlLWNsaWNrJyxcbiAgICBkcmFnOiAgICAgICAgICAgICAgICAgICAgICAgJ2RyYWcnLFxuICAgIGRyYWdUb0VsZW1lbnQ6ICAgICAgICAgICAgICAnZHJhZy10by1lbGVtZW50JyxcbiAgICBob3ZlcjogICAgICAgICAgICAgICAgICAgICAgJ2hvdmVyJyxcbiAgICB0eXBlVGV4dDogICAgICAgICAgICAgICAgICAgJ3R5cGUtdGV4dCcsXG4gICAgc2VsZWN0VGV4dDogICAgICAgICAgICAgICAgICdzZWxlY3QtdGV4dCcsXG4gICAgc2VsZWN0VGV4dEFyZWFDb250ZW50OiAgICAgICdzZWxlY3QtdGV4dC1hcmVhLWNvbnRlbnQnLFxuICAgIHNlbGVjdEVkaXRhYmxlQ29udGVudDogICAgICAnc2VsZWN0LWVkaXRhYmxlLWNvbnRlbnQnLFxuICAgIHByZXNzS2V5OiAgICAgICAgICAgICAgICAgICAncHJlc3Mta2V5JyxcbiAgICB3YWl0OiAgICAgICAgICAgICAgICAgICAgICAgJ3dhaXQnLFxuICAgIG5hdmlnYXRlVG86ICAgICAgICAgICAgICAgICAnbmF2aWdhdGUtdG8nLFxuICAgIHNldEZpbGVzVG9VcGxvYWQ6ICAgICAgICAgICAnc2V0LWZpbGVzLXRvLXVwbG9hZCcsXG4gICAgY2xlYXJVcGxvYWQ6ICAgICAgICAgICAgICAgICdjbGVhci11cGxvYWQnLFxuICAgIGV4ZWN1dGVDbGllbnRGdW5jdGlvbjogICAgICAnZXhlY3V0ZS1jbGllbnQtZnVuY3Rpb24nLFxuICAgIGV4ZWN1dGVTZWxlY3RvcjogICAgICAgICAgICAnZXhlY3V0ZS1zZWxlY3RvcicsXG4gICAgdGFrZVNjcmVlbnNob3Q6ICAgICAgICAgICAgICd0YWtlLXNjcmVlbnNob3QnLFxuICAgIHRha2VFbGVtZW50U2NyZWVuc2hvdDogICAgICAndGFrZS1lbGVtZW50LXNjcmVlbnNob3QnLFxuICAgIHRha2VTY3JlZW5zaG90T25GYWlsOiAgICAgICAndGFrZS1zY3JlZW5zaG90LW9uLWZhaWwnLFxuICAgIHByZXBhcmVCcm93c2VyTWFuaXB1bGF0aW9uOiAncHJlcGFyZS1icm93c2VyLW1hbmlwdWxhdGlvbicsXG4gICAgc2hvd0Fzc2VydGlvblJldHJpZXNTdGF0dXM6ICdzaG93LWFzc2VydGlvbi1yZXRyaWVzLXN0YXR1cycsXG4gICAgaGlkZUFzc2VydGlvblJldHJpZXNTdGF0dXM6ICdoaWRlLWFzc2VydGlvbi1yZXRyaWVzLXN0YXR1cycsXG4gICAgc2V0QnJlYWtwb2ludDogICAgICAgICAgICAgICdzZXQtYnJlYWtwb2ludCcsXG4gICAgcmVzaXplV2luZG93OiAgICAgICAgICAgICAgICdyZXNpemUtd2luZG93JyxcbiAgICByZXNpemVXaW5kb3dUb0ZpdERldmljZTogICAgJ3Jlc2l6ZS13aW5kb3ctdG8tZml0LWRldmljZScsXG4gICAgbWF4aW1pemVXaW5kb3c6ICAgICAgICAgICAgICdtYXhpbWl6ZS13aW5kb3cnLFxuICAgIHN3aXRjaFRvSWZyYW1lOiAgICAgICAgICAgICAnc3dpdGNoLXRvLWlmcmFtZScsXG4gICAgc3dpdGNoVG9NYWluV2luZG93OiAgICAgICAgICdzd2l0Y2gtdG8tbWFpbi13aW5kb3cnLFxuICAgIHNldE5hdGl2ZURpYWxvZ0hhbmRsZXI6ICAgICAnc2V0LW5hdGl2ZS1kaWFsb2ctaGFuZGxlcicsXG4gICAgZ2V0TmF0aXZlRGlhbG9nSGlzdG9yeTogICAgICdnZXQtbmF0aXZlLWRpYWxvZy1oaXN0b3J5JyxcbiAgICBnZXRCcm93c2VyQ29uc29sZU1lc3NhZ2VzOiAgJ2dldC1icm93c2VyLWNvbnNvbGUtbWVzc2FnZXMnLFxuICAgIHNldFRlc3RTcGVlZDogICAgICAgICAgICAgICAnc2V0LXRlc3Qtc3BlZWQnLFxuICAgIHNldFBhZ2VMb2FkVGltZW91dDogICAgICAgICAnc2V0LXBhZ2UtbG9hZC10aW1lb3V0JyxcbiAgICBkZWJ1ZzogICAgICAgICAgICAgICAgICAgICAgJ2RlYnVnJyxcbiAgICBhc3NlcnRpb246ICAgICAgICAgICAgICAgICAgJ2Fzc2VydGlvbicsXG4gICAgdXNlUm9sZTogICAgICAgICAgICAgICAgICAgICd1c2VSb2xlJyxcbiAgICB0ZXN0RG9uZTogICAgICAgICAgICAgICAgICAgJ3Rlc3QtZG9uZScsXG4gICAgYmFja3VwU3RvcmFnZXM6ICAgICAgICAgICAgICdiYWNrdXAtc3RvcmFnZXMnLFxuICAgIGV4ZWN1dGVFeHByZXNzaW9uOiAgICAgICAgICAnZXhlY3V0ZS1leHByZXNzaW9uJyxcbiAgICB1bmxvY2tQYWdlOiAgICAgICAgICAgICAgICAgJ3VubG9jay1wYWdlJ1xufTtcbiJdfQ==