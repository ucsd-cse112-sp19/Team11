'use strict';

exports.__esModule = true;

var _keys = require('babel-runtime/core-js/object/keys');

var _keys2 = _interopRequireDefault(_keys);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _base = require('./base');

var _base2 = _interopRequireDefault(_base);

var _types = require('../../errors/types');

var _runtime = require('../../errors/runtime');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = (() => {
    var _ref = (0, _asyncToGenerator3.default)(function* (optionName, options) {
        const metaOptions = yield (0, _base2.default)(options, {
            skipOptionValueTypeConversion: true,

            onOptionParsed(key, value) {
                return (0, _asyncToGenerator3.default)(function* () {
                    if (!key || !value) throw new _runtime.GeneralError(_types.RUNTIME_ERRORS.optionValueIsNotValidKeyValue, optionName);

                    return String(value);
                })();
            }
        });

        if ((0, _keys2.default)(metaOptions).length === 0) throw new _runtime.GeneralError(_types.RUNTIME_ERRORS.optionValueIsNotValidKeyValue, optionName);

        return metaOptions;
    });

    return function (_x, _x2) {
        return _ref.apply(this, arguments);
    };
})();

module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy9nZXQtb3B0aW9ucy9tZXRhLmpzIl0sIm5hbWVzIjpbIm9wdGlvbk5hbWUiLCJvcHRpb25zIiwibWV0YU9wdGlvbnMiLCJza2lwT3B0aW9uVmFsdWVUeXBlQ29udmVyc2lvbiIsIm9uT3B0aW9uUGFyc2VkIiwia2V5IiwidmFsdWUiLCJHZW5lcmFsRXJyb3IiLCJSVU5USU1FX0VSUk9SUyIsIm9wdGlvblZhbHVlSXNOb3RWYWxpZEtleVZhbHVlIiwiU3RyaW5nIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBQTs7OztBQUNBOztBQUNBOzs7OzsrQ0FHZSxXQUFnQkEsVUFBaEIsRUFBNEJDLE9BQTVCLEVBQXFDO0FBQ2hELGNBQU1DLGNBQWMsTUFBTSxvQkFBZUQsT0FBZixFQUF3QjtBQUM5Q0UsMkNBQStCLElBRGU7O0FBR3hDQywwQkFBTixDQUFzQkMsR0FBdEIsRUFBMkJDLEtBQTNCLEVBQWtDO0FBQUE7QUFDOUIsd0JBQUksQ0FBQ0QsR0FBRCxJQUFRLENBQUNDLEtBQWIsRUFDSSxNQUFNLElBQUlDLHFCQUFKLENBQWlCQyxzQkFBZUMsNkJBQWhDLEVBQStEVCxVQUEvRCxDQUFOOztBQUVKLDJCQUFPVSxPQUFPSixLQUFQLENBQVA7QUFKOEI7QUFLakM7QUFSNkMsU0FBeEIsQ0FBMUI7O0FBV0EsWUFBSSxvQkFBWUosV0FBWixFQUF5QlMsTUFBekIsS0FBb0MsQ0FBeEMsRUFDSSxNQUFNLElBQUlKLHFCQUFKLENBQWlCQyxzQkFBZUMsNkJBQWhDLEVBQStEVCxVQUEvRCxDQUFOOztBQUVKLGVBQU9FLFdBQVA7QUFDSCxLIiwiZmlsZSI6InV0aWxzL2dldC1vcHRpb25zL21ldGEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYmFzZUdldE9wdGlvbnMgZnJvbSAnLi9iYXNlJztcbmltcG9ydCB7IFJVTlRJTUVfRVJST1JTIH0gZnJvbSAnLi4vLi4vZXJyb3JzL3R5cGVzJztcbmltcG9ydCB7IEdlbmVyYWxFcnJvciB9IGZyb20gJy4uLy4uL2Vycm9ycy9ydW50aW1lJztcblxuXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiAob3B0aW9uTmFtZSwgb3B0aW9ucykge1xuICAgIGNvbnN0IG1ldGFPcHRpb25zID0gYXdhaXQgYmFzZUdldE9wdGlvbnMob3B0aW9ucywge1xuICAgICAgICBza2lwT3B0aW9uVmFsdWVUeXBlQ29udmVyc2lvbjogdHJ1ZSxcblxuICAgICAgICBhc3luYyBvbk9wdGlvblBhcnNlZCAoa2V5LCB2YWx1ZSkge1xuICAgICAgICAgICAgaWYgKCFrZXkgfHwgIXZhbHVlKVxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBHZW5lcmFsRXJyb3IoUlVOVElNRV9FUlJPUlMub3B0aW9uVmFsdWVJc05vdFZhbGlkS2V5VmFsdWUsIG9wdGlvbk5hbWUpO1xuXG4gICAgICAgICAgICByZXR1cm4gU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgaWYgKE9iamVjdC5rZXlzKG1ldGFPcHRpb25zKS5sZW5ndGggPT09IDApXG4gICAgICAgIHRocm93IG5ldyBHZW5lcmFsRXJyb3IoUlVOVElNRV9FUlJPUlMub3B0aW9uVmFsdWVJc05vdFZhbGlkS2V5VmFsdWUsIG9wdGlvbk5hbWUpO1xuXG4gICAgcmV0dXJuIG1ldGFPcHRpb25zO1xufVxuIl19
