'use strict';

exports.__esModule = true;

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

exports.default = function (optionString) {
    return (0, _base2.default)(optionString, {
        optionsSeparator: OPTIONS_SEPARATOR,

        onOptionParsed(key, value) {
            return (0, _asyncToGenerator3.default)(function* () {
                if (!FILE_OPTION_NAMES.includes(key) || value.length > OS_MAX_PATH_LENGTH) return value;

                try {
                    yield (0, _promisifiedFunctions.stat)(value);
                } catch (error) {
                    DEBUG_LOGGER((0, _renderTemplate2.default)(_warningMessage2.default.cannotFindSSLCertFile, value, key, error.stack));

                    return value;
                }

                try {
                    return yield (0, _promisifiedFunctions.readFile)(value);
                } catch (error) {
                    throw new _runtime.GeneralError(_types.RUNTIME_ERRORS.cannotReadSSLCertFile, value, key, error.stack);
                }
            })();
        }
    });
};

var _os = require('os');

var _os2 = _interopRequireDefault(_os);

var _debug = require('debug');

var _debug2 = _interopRequireDefault(_debug);

var _base = require('./base');

var _base2 = _interopRequireDefault(_base);

var _runtime = require('../../errors/runtime');

var _promisifiedFunctions = require('../promisified-functions');

var _renderTemplate = require('../../utils/render-template');

var _renderTemplate2 = _interopRequireDefault(_renderTemplate);

var _types = require('../../errors/types');

var _warningMessage = require('../../notifications/warning-message');

var _warningMessage2 = _interopRequireDefault(_warningMessage);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const DEBUG_LOGGER = (0, _debug2.default)('testcafe:utils:get-options:ssl');

const MAX_PATH_LENGTH = {
    'Linux': 4096,
    'Windows_NT': 260,
    'Darwin': 1024
};

const OS_MAX_PATH_LENGTH = MAX_PATH_LENGTH[_os2.default.type()];

const OPTIONS_SEPARATOR = ';';
const FILE_OPTION_NAMES = ['cert', 'key', 'pfx'];

module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy9nZXQtb3B0aW9ucy9zc2wuanMiXSwibmFtZXMiOlsib3B0aW9uU3RyaW5nIiwib3B0aW9uc1NlcGFyYXRvciIsIk9QVElPTlNfU0VQQVJBVE9SIiwib25PcHRpb25QYXJzZWQiLCJrZXkiLCJ2YWx1ZSIsIkZJTEVfT1BUSU9OX05BTUVTIiwiaW5jbHVkZXMiLCJsZW5ndGgiLCJPU19NQVhfUEFUSF9MRU5HVEgiLCJlcnJvciIsIkRFQlVHX0xPR0dFUiIsIldBUk5JTkdfTUVTU0FHRVMiLCJjYW5ub3RGaW5kU1NMQ2VydEZpbGUiLCJzdGFjayIsIkdlbmVyYWxFcnJvciIsIlJVTlRJTUVfRVJST1JTIiwiY2Fubm90UmVhZFNTTENlcnRGaWxlIiwiTUFYX1BBVEhfTEVOR1RIIiwib3MiLCJ0eXBlIl0sIm1hcHBpbmdzIjoiOzs7Ozs7OztrQkF3QmUsVUFBVUEsWUFBVixFQUF3QjtBQUNuQyxXQUFPLG9CQUFlQSxZQUFmLEVBQTZCO0FBQ2hDQywwQkFBa0JDLGlCQURjOztBQUcxQkMsc0JBQU4sQ0FBc0JDLEdBQXRCLEVBQTJCQyxLQUEzQixFQUFrQztBQUFBO0FBQzlCLG9CQUFJLENBQUNDLGtCQUFrQkMsUUFBbEIsQ0FBMkJILEdBQTNCLENBQUQsSUFBb0NDLE1BQU1HLE1BQU4sR0FBZUMsa0JBQXZELEVBQ0ksT0FBT0osS0FBUDs7QUFFSixvQkFBSTtBQUNBLDBCQUFNLGdDQUFLQSxLQUFMLENBQU47QUFDSCxpQkFGRCxDQUdBLE9BQU9LLEtBQVAsRUFBYztBQUNWQyxpQ0FBYSw4QkFBZUMseUJBQWlCQyxxQkFBaEMsRUFBdURSLEtBQXZELEVBQThERCxHQUE5RCxFQUFtRU0sTUFBTUksS0FBekUsQ0FBYjs7QUFFQSwyQkFBT1QsS0FBUDtBQUNIOztBQUVELG9CQUFJO0FBQ0EsMkJBQU8sTUFBTSxvQ0FBU0EsS0FBVCxDQUFiO0FBQ0gsaUJBRkQsQ0FHQSxPQUFPSyxLQUFQLEVBQWM7QUFDViwwQkFBTSxJQUFJSyxxQkFBSixDQUFpQkMsc0JBQWVDLHFCQUFoQyxFQUF1RFosS0FBdkQsRUFBOERELEdBQTlELEVBQW1FTSxNQUFNSSxLQUF6RSxDQUFOO0FBQ0g7QUFsQjZCO0FBbUJqQztBQXRCK0IsS0FBN0IsQ0FBUDtBQXdCSCxDOztBQWpERDs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7QUFDQTs7OztBQUNBOztBQUNBOzs7Ozs7QUFHQSxNQUFNSCxlQUFlLHFCQUFNLGdDQUFOLENBQXJCOztBQUVBLE1BQU1PLGtCQUFrQjtBQUNwQixhQUFjLElBRE07QUFFcEIsa0JBQWMsR0FGTTtBQUdwQixjQUFjO0FBSE0sQ0FBeEI7O0FBTUEsTUFBTVQscUJBQXFCUyxnQkFBZ0JDLGFBQUdDLElBQUgsRUFBaEIsQ0FBM0I7O0FBRUEsTUFBTWxCLG9CQUE2QixHQUFuQztBQUNBLE1BQU1JLG9CQUE2QixDQUFDLE1BQUQsRUFBUyxLQUFULEVBQWdCLEtBQWhCLENBQW5DIiwiZmlsZSI6InV0aWxzL2dldC1vcHRpb25zL3NzbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBvcyBmcm9tICdvcyc7XG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuaW1wb3J0IGJhc2VHZXRPcHRpb25zIGZyb20gJy4vYmFzZSc7XG5pbXBvcnQgeyBHZW5lcmFsRXJyb3IgfSBmcm9tICcuLi8uLi9lcnJvcnMvcnVudGltZSc7XG5pbXBvcnQgeyBzdGF0LCByZWFkRmlsZSB9IGZyb20gJy4uL3Byb21pc2lmaWVkLWZ1bmN0aW9ucyc7XG5pbXBvcnQgcmVuZGVyVGVtcGxhdGUgZnJvbSAnLi4vLi4vdXRpbHMvcmVuZGVyLXRlbXBsYXRlJztcbmltcG9ydCB7IFJVTlRJTUVfRVJST1JTIH0gZnJvbSAnLi4vLi4vZXJyb3JzL3R5cGVzJztcbmltcG9ydCBXQVJOSU5HX01FU1NBR0VTIGZyb20gJy4uLy4uL25vdGlmaWNhdGlvbnMvd2FybmluZy1tZXNzYWdlJztcblxuXG5jb25zdCBERUJVR19MT0dHRVIgPSBkZWJ1ZygndGVzdGNhZmU6dXRpbHM6Z2V0LW9wdGlvbnM6c3NsJyk7XG5cbmNvbnN0IE1BWF9QQVRIX0xFTkdUSCA9IHtcbiAgICAnTGludXgnOiAgICAgIDQwOTYsXG4gICAgJ1dpbmRvd3NfTlQnOiAyNjAsXG4gICAgJ0Rhcndpbic6ICAgICAxMDI0XG59O1xuXG5jb25zdCBPU19NQVhfUEFUSF9MRU5HVEggPSBNQVhfUEFUSF9MRU5HVEhbb3MudHlwZSgpXTtcblxuY29uc3QgT1BUSU9OU19TRVBBUkFUT1IgICAgICAgICAgPSAnOyc7XG5jb25zdCBGSUxFX09QVElPTl9OQU1FUyAgICAgICAgICA9IFsnY2VydCcsICdrZXknLCAncGZ4J107XG5cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gKG9wdGlvblN0cmluZykge1xuICAgIHJldHVybiBiYXNlR2V0T3B0aW9ucyhvcHRpb25TdHJpbmcsIHtcbiAgICAgICAgb3B0aW9uc1NlcGFyYXRvcjogT1BUSU9OU19TRVBBUkFUT1IsXG5cbiAgICAgICAgYXN5bmMgb25PcHRpb25QYXJzZWQgKGtleSwgdmFsdWUpIHtcbiAgICAgICAgICAgIGlmICghRklMRV9PUFRJT05fTkFNRVMuaW5jbHVkZXMoa2V5KSB8fCB2YWx1ZS5sZW5ndGggPiBPU19NQVhfUEFUSF9MRU5HVEgpXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGF3YWl0IHN0YXQodmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgREVCVUdfTE9HR0VSKHJlbmRlclRlbXBsYXRlKFdBUk5JTkdfTUVTU0FHRVMuY2Fubm90RmluZFNTTENlcnRGaWxlLCB2YWx1ZSwga2V5LCBlcnJvci5zdGFjaykpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCByZWFkRmlsZSh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgR2VuZXJhbEVycm9yKFJVTlRJTUVfRVJST1JTLmNhbm5vdFJlYWRTU0xDZXJ0RmlsZSwgdmFsdWUsIGtleSwgZXJyb3Iuc3RhY2spO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfSk7XG59XG5cbiJdfQ==
