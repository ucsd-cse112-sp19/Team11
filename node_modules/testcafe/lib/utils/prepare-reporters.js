'use strict';

exports.__esModule = true;

exports.default = function (name, output) {
    let reporters = [];

    if (name instanceof Array) reporters = name.map(r => typeof r === 'string' || typeof r === 'function' ? { name: r } : r);else {
        const reporter = { name, output };

        reporters.push(reporter);
    }

    reporters.forEach(r => validateReporterOutput(r.output));

    return reporters;
};

var _isStream = require('is-stream');

var _runtime = require('../errors/runtime');

var _types = require('../errors/types');

function isStreamMock(obj) {
    return obj && typeof obj.write === 'function' && typeof obj.end === 'function';
}

function validateReporterOutput(obj) {
    const isValidReporterOutput = obj === void 0 || typeof obj === 'string' || (0, _isStream.writable)(obj) || isStreamMock(obj);

    if (!isValidReporterOutput) throw new _runtime.GeneralError(_types.RUNTIME_ERRORS.invalidReporterOutput);
}

module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9wcmVwYXJlLXJlcG9ydGVycy5qcyJdLCJuYW1lcyI6WyJuYW1lIiwib3V0cHV0IiwicmVwb3J0ZXJzIiwiQXJyYXkiLCJtYXAiLCJyIiwicmVwb3J0ZXIiLCJwdXNoIiwiZm9yRWFjaCIsInZhbGlkYXRlUmVwb3J0ZXJPdXRwdXQiLCJpc1N0cmVhbU1vY2siLCJvYmoiLCJ3cml0ZSIsImVuZCIsImlzVmFsaWRSZXBvcnRlck91dHB1dCIsIkdlbmVyYWxFcnJvciIsIlJVTlRJTUVfRVJST1JTIiwiaW52YWxpZFJlcG9ydGVyT3V0cHV0Il0sIm1hcHBpbmdzIjoiOzs7O2tCQW9CZSxVQUFVQSxJQUFWLEVBQWdCQyxNQUFoQixFQUF3QjtBQUNuQyxRQUFJQyxZQUFZLEVBQWhCOztBQUVBLFFBQUlGLGdCQUFnQkcsS0FBcEIsRUFDSUQsWUFBWUYsS0FBS0ksR0FBTCxDQUFTQyxLQUFLLE9BQU9BLENBQVAsS0FBYSxRQUFiLElBQXlCLE9BQU9BLENBQVAsS0FBYSxVQUF0QyxHQUFtRCxFQUFFTCxNQUFNSyxDQUFSLEVBQW5ELEdBQWlFQSxDQUEvRSxDQUFaLENBREosS0FFSztBQUNELGNBQU1DLFdBQVcsRUFBRU4sSUFBRixFQUFRQyxNQUFSLEVBQWpCOztBQUVBQyxrQkFBVUssSUFBVixDQUFlRCxRQUFmO0FBQ0g7O0FBRURKLGNBQVVNLE9BQVYsQ0FBa0JILEtBQUtJLHVCQUF1QkosRUFBRUosTUFBekIsQ0FBdkI7O0FBRUEsV0FBT0MsU0FBUDtBQUNILEM7O0FBbENEOztBQUNBOztBQUNBOztBQUVBLFNBQVNRLFlBQVQsQ0FBdUJDLEdBQXZCLEVBQTRCO0FBQ3hCLFdBQU9BLE9BQ0EsT0FBT0EsSUFBSUMsS0FBWCxLQUFxQixVQURyQixJQUVBLE9BQU9ELElBQUlFLEdBQVgsS0FBbUIsVUFGMUI7QUFHSDs7QUFFRCxTQUFTSixzQkFBVCxDQUFpQ0UsR0FBakMsRUFBc0M7QUFDbEMsVUFBTUcsd0JBQXdCSCxRQUFRLEtBQUssQ0FBYixJQUN4QixPQUFPQSxHQUFQLEtBQWUsUUFEUyxJQUV4Qix3QkFBaUJBLEdBQWpCLENBRndCLElBR3hCRCxhQUFhQyxHQUFiLENBSE47O0FBS0EsUUFBSSxDQUFDRyxxQkFBTCxFQUNJLE1BQU0sSUFBSUMscUJBQUosQ0FBaUJDLHNCQUFlQyxxQkFBaEMsQ0FBTjtBQUNQIiwiZmlsZSI6InV0aWxzL3ByZXBhcmUtcmVwb3J0ZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgd3JpdGFibGUgYXMgaXNXcml0YWJsZVN0cmVhbSB9IGZyb20gJ2lzLXN0cmVhbSc7XG5pbXBvcnQgeyBHZW5lcmFsRXJyb3IgfSBmcm9tICcuLi9lcnJvcnMvcnVudGltZSc7XG5pbXBvcnQgeyBSVU5USU1FX0VSUk9SUyB9IGZyb20gJy4uL2Vycm9ycy90eXBlcyc7XG5cbmZ1bmN0aW9uIGlzU3RyZWFtTW9jayAob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAmJlxuICAgICAgICAgICB0eXBlb2Ygb2JqLndyaXRlID09PSAnZnVuY3Rpb24nICYmXG4gICAgICAgICAgIHR5cGVvZiBvYmouZW5kID09PSAnZnVuY3Rpb24nO1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZVJlcG9ydGVyT3V0cHV0IChvYmopIHtcbiAgICBjb25zdCBpc1ZhbGlkUmVwb3J0ZXJPdXRwdXQgPSBvYmogPT09IHZvaWQgMCB8fFxuICAgICAgICAgIHR5cGVvZiBvYmogPT09ICdzdHJpbmcnIHx8XG4gICAgICAgICAgaXNXcml0YWJsZVN0cmVhbShvYmopIHx8XG4gICAgICAgICAgaXNTdHJlYW1Nb2NrKG9iaik7XG5cbiAgICBpZiAoIWlzVmFsaWRSZXBvcnRlck91dHB1dClcbiAgICAgICAgdGhyb3cgbmV3IEdlbmVyYWxFcnJvcihSVU5USU1FX0VSUk9SUy5pbnZhbGlkUmVwb3J0ZXJPdXRwdXQpO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiAobmFtZSwgb3V0cHV0KSB7XG4gICAgbGV0IHJlcG9ydGVycyA9IFtdO1xuXG4gICAgaWYgKG5hbWUgaW5zdGFuY2VvZiBBcnJheSlcbiAgICAgICAgcmVwb3J0ZXJzID0gbmFtZS5tYXAociA9PiB0eXBlb2YgciA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHIgPT09ICdmdW5jdGlvbicgPyB7IG5hbWU6IHIgfSA6IHIpO1xuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCByZXBvcnRlciA9IHsgbmFtZSwgb3V0cHV0IH07XG5cbiAgICAgICAgcmVwb3J0ZXJzLnB1c2gocmVwb3J0ZXIpO1xuICAgIH1cblxuICAgIHJlcG9ydGVycy5mb3JFYWNoKHIgPT4gdmFsaWRhdGVSZXBvcnRlck91dHB1dChyLm91dHB1dCkpO1xuXG4gICAgcmV0dXJuIHJlcG9ydGVycztcbn1cbiJdfQ==
