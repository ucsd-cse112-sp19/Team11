'use strict';

exports.__esModule = true;
exports.readPngFile = exports.sendMessageToChildProcess = exports.exec = exports.deleteFile = exports.readFile = exports.writeFile = exports.stat = exports.readDir = undefined;

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

let readPngFile = exports.readPngFile = (() => {
    var _ref = (0, _asyncToGenerator3.default)(function* (filePath) {
        const buffer = yield readFile(filePath);

        return yield readPng(buffer);
    });

    return function readPngFile(_x) {
        return _ref.apply(this, arguments);
    };
})();

exports.readPng = readPng;
exports.writePng = writePng;

var _child_process = require('child_process');

var _child_process2 = _interopRequireDefault(_child_process);

var _gracefulFs = require('graceful-fs');

var _gracefulFs2 = _interopRequireDefault(_gracefulFs);

var _pinkie = require('pinkie');

var _pinkie2 = _interopRequireDefault(_pinkie);

var _pngjs = require('pngjs');

var _promisifyEvent = require('promisify-event');

var _promisifyEvent2 = _interopRequireDefault(_promisifyEvent);

var _promisify = require('./promisify');

var _promisify2 = _interopRequireDefault(_promisify);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const readDir = exports.readDir = (0, _promisify2.default)(_gracefulFs2.default.readdir);
const stat = exports.stat = (0, _promisify2.default)(_gracefulFs2.default.stat);
const writeFile = exports.writeFile = (0, _promisify2.default)(_gracefulFs2.default.writeFile);
const readFile = exports.readFile = (0, _promisify2.default)(_gracefulFs2.default.readFile);
const deleteFile = exports.deleteFile = (0, _promisify2.default)(_gracefulFs2.default.unlink);

const exec = exports.exec = (0, _promisify2.default)(_child_process2.default.exec);

const sendMessageToChildProcess = exports.sendMessageToChildProcess = (0, _promisify2.default)((process, ...args) => process.send(...args));

function readPng(buffer) {
    const png = new _pngjs.PNG();

    const parsedPromise = _pinkie2.default.race([(0, _promisifyEvent2.default)(png, 'parsed'), (0, _promisifyEvent2.default)(png, 'error')]);

    png.parse(buffer);

    return parsedPromise.then(() => png);
}

function writePng(filePath, png) {
    const outStream = _gracefulFs2.default.createWriteStream(filePath);
    const pngStream = png.pack();

    const finishPromise = _pinkie2.default.race([(0, _promisifyEvent2.default)(outStream, 'finish'), (0, _promisifyEvent2.default)(outStream, 'error'), (0, _promisifyEvent2.default)(pngStream, 'error')]);

    pngStream.pipe(outStream);

    return finishPromise;
}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9wcm9taXNpZmllZC1mdW5jdGlvbnMuanMiXSwibmFtZXMiOlsiZmlsZVBhdGgiLCJidWZmZXIiLCJyZWFkRmlsZSIsInJlYWRQbmciLCJyZWFkUG5nRmlsZSIsIndyaXRlUG5nIiwicmVhZERpciIsImZzIiwicmVhZGRpciIsInN0YXQiLCJ3cml0ZUZpbGUiLCJkZWxldGVGaWxlIiwidW5saW5rIiwiZXhlYyIsImNoaWxkUHJvY2VzcyIsInNlbmRNZXNzYWdlVG9DaGlsZFByb2Nlc3MiLCJwcm9jZXNzIiwiYXJncyIsInNlbmQiLCJwbmciLCJQTkciLCJwYXJzZWRQcm9taXNlIiwiUHJvbWlzZSIsInJhY2UiLCJwYXJzZSIsInRoZW4iLCJvdXRTdHJlYW0iLCJjcmVhdGVXcml0ZVN0cmVhbSIsInBuZ1N0cmVhbSIsInBhY2siLCJmaW5pc2hQcm9taXNlIiwicGlwZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OzsrQ0FnQ08sV0FBNEJBLFFBQTVCLEVBQXNDO0FBQ3pDLGNBQU1DLFNBQVMsTUFBTUMsU0FBU0YsUUFBVCxDQUFyQjs7QUFFQSxlQUFPLE1BQU1HLFFBQVFGLE1BQVIsQ0FBYjtBQUNILEs7O29CQUpxQkcsVzs7Ozs7UUFkTkQsTyxHQUFBQSxPO1FBb0JBRSxRLEdBQUFBLFE7O0FBdENoQjs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7QUFDQTs7OztBQUNBOzs7Ozs7QUFHTyxNQUFNQyw0QkFBYSx5QkFBVUMscUJBQUdDLE9BQWIsQ0FBbkI7QUFDQSxNQUFNQyxzQkFBYSx5QkFBVUYscUJBQUdFLElBQWIsQ0FBbkI7QUFDQSxNQUFNQyxnQ0FBYSx5QkFBVUgscUJBQUdHLFNBQWIsQ0FBbkI7QUFDQSxNQUFNUiw4QkFBYSx5QkFBVUsscUJBQUdMLFFBQWIsQ0FBbkI7QUFDQSxNQUFNUyxrQ0FBYSx5QkFBVUoscUJBQUdLLE1BQWIsQ0FBbkI7O0FBRUEsTUFBTUMsc0JBQU8seUJBQVVDLHdCQUFhRCxJQUF2QixDQUFiOztBQUVBLE1BQU1FLGdFQUE0Qix5QkFBVSxDQUFDQyxPQUFELEVBQVUsR0FBR0MsSUFBYixLQUFzQkQsUUFBUUUsSUFBUixDQUFhLEdBQUdELElBQWhCLENBQWhDLENBQWxDOztBQUVBLFNBQVNkLE9BQVQsQ0FBa0JGLE1BQWxCLEVBQTBCO0FBQzdCLFVBQU1rQixNQUFNLElBQUlDLFVBQUosRUFBWjs7QUFFQSxVQUFNQyxnQkFBZ0JDLGlCQUFRQyxJQUFSLENBQWEsQ0FDL0IsOEJBQWVKLEdBQWYsRUFBb0IsUUFBcEIsQ0FEK0IsRUFFL0IsOEJBQWVBLEdBQWYsRUFBb0IsT0FBcEIsQ0FGK0IsQ0FBYixDQUF0Qjs7QUFLQUEsUUFBSUssS0FBSixDQUFVdkIsTUFBVjs7QUFFQSxXQUFPb0IsY0FDRkksSUFERSxDQUNHLE1BQU1OLEdBRFQsQ0FBUDtBQUVIOztBQVFNLFNBQVNkLFFBQVQsQ0FBbUJMLFFBQW5CLEVBQTZCbUIsR0FBN0IsRUFBa0M7QUFDckMsVUFBTU8sWUFBWW5CLHFCQUFHb0IsaUJBQUgsQ0FBcUIzQixRQUFyQixDQUFsQjtBQUNBLFVBQU00QixZQUFZVCxJQUFJVSxJQUFKLEVBQWxCOztBQUVBLFVBQU1DLGdCQUFnQlIsaUJBQVFDLElBQVIsQ0FBYSxDQUMvQiw4QkFBZUcsU0FBZixFQUEwQixRQUExQixDQUQrQixFQUUvQiw4QkFBZUEsU0FBZixFQUEwQixPQUExQixDQUYrQixFQUcvQiw4QkFBZUUsU0FBZixFQUEwQixPQUExQixDQUgrQixDQUFiLENBQXRCOztBQU1BQSxjQUFVRyxJQUFWLENBQWVMLFNBQWY7O0FBRUEsV0FBT0ksYUFBUDtBQUNIIiwiZmlsZSI6InV0aWxzL3Byb21pc2lmaWVkLWZ1bmN0aW9ucy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjaGlsZFByb2Nlc3MgZnJvbSAnY2hpbGRfcHJvY2Vzcyc7XG5pbXBvcnQgZnMgZnJvbSAnZ3JhY2VmdWwtZnMnO1xuaW1wb3J0IFByb21pc2UgZnJvbSAncGlua2llJztcbmltcG9ydCB7IFBORyB9IGZyb20gJ3BuZ2pzJztcbmltcG9ydCBwcm9taXNpZnlFdmVudCBmcm9tICdwcm9taXNpZnktZXZlbnQnO1xuaW1wb3J0IHByb21pc2lmeSBmcm9tICcuL3Byb21pc2lmeSc7XG5cblxuZXhwb3J0IGNvbnN0IHJlYWREaXIgICAgPSBwcm9taXNpZnkoZnMucmVhZGRpcik7XG5leHBvcnQgY29uc3Qgc3RhdCAgICAgICA9IHByb21pc2lmeShmcy5zdGF0KTtcbmV4cG9ydCBjb25zdCB3cml0ZUZpbGUgID0gcHJvbWlzaWZ5KGZzLndyaXRlRmlsZSk7XG5leHBvcnQgY29uc3QgcmVhZEZpbGUgICA9IHByb21pc2lmeShmcy5yZWFkRmlsZSk7XG5leHBvcnQgY29uc3QgZGVsZXRlRmlsZSA9IHByb21pc2lmeShmcy51bmxpbmspO1xuXG5leHBvcnQgY29uc3QgZXhlYyA9IHByb21pc2lmeShjaGlsZFByb2Nlc3MuZXhlYyk7XG5cbmV4cG9ydCBjb25zdCBzZW5kTWVzc2FnZVRvQ2hpbGRQcm9jZXNzID0gcHJvbWlzaWZ5KChwcm9jZXNzLCAuLi5hcmdzKSA9PiBwcm9jZXNzLnNlbmQoLi4uYXJncykpO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVhZFBuZyAoYnVmZmVyKSB7XG4gICAgY29uc3QgcG5nID0gbmV3IFBORygpO1xuXG4gICAgY29uc3QgcGFyc2VkUHJvbWlzZSA9IFByb21pc2UucmFjZShbXG4gICAgICAgIHByb21pc2lmeUV2ZW50KHBuZywgJ3BhcnNlZCcpLFxuICAgICAgICBwcm9taXNpZnlFdmVudChwbmcsICdlcnJvcicpXG4gICAgXSk7XG5cbiAgICBwbmcucGFyc2UoYnVmZmVyKTtcblxuICAgIHJldHVybiBwYXJzZWRQcm9taXNlXG4gICAgICAgIC50aGVuKCgpID0+IHBuZyk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZWFkUG5nRmlsZSAoZmlsZVBhdGgpIHtcbiAgICBjb25zdCBidWZmZXIgPSBhd2FpdCByZWFkRmlsZShmaWxlUGF0aCk7XG5cbiAgICByZXR1cm4gYXdhaXQgcmVhZFBuZyhidWZmZXIpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gd3JpdGVQbmcgKGZpbGVQYXRoLCBwbmcpIHtcbiAgICBjb25zdCBvdXRTdHJlYW0gPSBmcy5jcmVhdGVXcml0ZVN0cmVhbShmaWxlUGF0aCk7XG4gICAgY29uc3QgcG5nU3RyZWFtID0gcG5nLnBhY2soKTtcblxuICAgIGNvbnN0IGZpbmlzaFByb21pc2UgPSBQcm9taXNlLnJhY2UoW1xuICAgICAgICBwcm9taXNpZnlFdmVudChvdXRTdHJlYW0sICdmaW5pc2gnKSxcbiAgICAgICAgcHJvbWlzaWZ5RXZlbnQob3V0U3RyZWFtLCAnZXJyb3InKSxcbiAgICAgICAgcHJvbWlzaWZ5RXZlbnQocG5nU3RyZWFtLCAnZXJyb3InKVxuICAgIF0pO1xuXG4gICAgcG5nU3RyZWFtLnBpcGUob3V0U3RyZWFtKTtcblxuICAgIHJldHVybiBmaW5pc2hQcm9taXNlO1xufVxuXG5cbiJdfQ==
